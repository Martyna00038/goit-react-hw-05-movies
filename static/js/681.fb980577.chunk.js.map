{"version":3,"file":"static/js/681.fb980577.chunk.js","mappings":"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","sources":["components/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/api';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const reviewsData = await fetchMovieReviews(movieId);\n        if (reviewsData && Array.isArray(reviewsData.results)) {\n          setReviews(reviewsData.results);\n        } else {\n          setReviews([]);\n        }\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n        setReviews([]);\n      }\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <strong>{review.author}</strong>: {review.content}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews yet.</p>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MTU4MGEwNzMwMWM4Y2Y2MDE1NmMzOGQ5NjViMzFjNyIsInN1YiI6IjY1ZDY0Y2M3MjVjZDg1MDE4NjdlYzI5ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IGg87z05r1r2foqoV5oHcdgwaCCNHoQQNLbnMdGV8oE';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n}\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: { query },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error during API call:', error);\n    throw error;\n  }\n};\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n}\n"],"names":["Reviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","getMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","reviewsData","_context","prev","next","fetchMovieReviews","sent","Array","isArray","results","t0","console","error","stop","apply","arguments","_jsx","children","length","map","review","_jsxs","author","content","id","fetchTrendingMovies","_fetchTrendingMovies","_callee2","response","_context2","axios","abrupt","data","searchMovies","query","params","_x","fetchMovieById","_x2","_fetchMovieById","_callee3","_context3","concat","fetchMovieCredits","_x3","_fetchMovieCredits","_callee4","_context4","cast","_x4","_fetchMovieReviews","_callee5","_context5"],"sourceRoot":""}