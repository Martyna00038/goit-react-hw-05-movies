{"version":3,"file":"static/js/802.7d0d1b26.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/movieDetails.module.css?f136","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieImage\":\"movieDetails_movieImage__Ygv7b\",\"movieDescription\":\"movieDetails_movieDescription__2O673\",\"movieLink\":\"movieDetails_movieLink__tC6mi\"};","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { fetchMovieById } from '../../services/api';\nimport css from './movieDetails.module.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const movieData = await fetchMovieById(movieId);\n        setMovie(movieData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    navigate(location.state?.from ?? '/');\n  };\n\n  return (\n    <div>\n      <button className={css.movieLink} onClick={handleGoBack}>\n        Go back\n      </button>\n      {movie && (\n        <div>\n          <h2>{movie.title}</h2>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n            alt={movie.title}\n            className={css.movieImage}\n          />\n          <p className={css.movieDescription}>{movie.overview}</p>\n          <p className={css.movieDescription}>\n            User Score: {Math.round(movie.vote_average * 10)}%\n          </p>\n          <p className={css.movieDescription}>\n            Genres: {movie.genres.map(genre => genre.name).join(', ')}\n          </p>\n          <Link className={css.movieLink} to=\"cast\">\n            Show Cast\n          </Link>\n          <Link className={css.movieLink} to=\"reviews\">\n            Show Reviews\n          </Link>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MTU4MGEwNzMwMWM4Y2Y2MDE1NmMzOGQ5NjViMzFjNyIsInN1YiI6IjY1ZDY0Y2M3MjVjZDg1MDE4NjdlYzI5ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IGg87z05r1r2foqoV5oHcdgwaCCNHoQQNLbnMdGV8oE';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n}\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: { query },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error during API call:', error);\n    throw error;\n  }\n};\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n}\n"],"names":["MovieDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","location","useLocation","navigate","useNavigate","useEffect","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","fetchMovieById","sent","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","className","css","onClick","_location$state$from","_location$state","state","from","title","src","concat","poster_path","alt","overview","Math","round","vote_average","genres","map","genre","name","join","Link","to","Outlet","fetchTrendingMovies","_fetchTrendingMovies","_callee2","response","_context2","axios","abrupt","data","results","searchMovies","query","params","_x","_x2","_fetchMovieById","_callee3","_context3","fetchMovieCredits","_x3","_fetchMovieCredits","_callee4","_context4","cast","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5"],"sourceRoot":""}