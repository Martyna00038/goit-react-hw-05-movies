{"version":3,"file":"static/js/269.80476621.chunk.js","mappings":"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","sources":["components/Api.jsx","webpack://react-homework-template/./src/components/Movies/movies.module.css?968c","components/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\naxios.defaults.baseURL = BASE_URL;\n\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3MTU4MGEwNzMwMWM4Y2Y2MDE1NmMzOGQ5NjViMzFjNyIsInN1YiI6IjY1ZDY0Y2M3MjVjZDg1MDE4NjdlYzI5ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IGg87z05r1r2foqoV5oHcdgwaCCNHoQQNLbnMdGV8oE';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get('/trending/movie/day');\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n}\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: { query },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error during API call:', error);\n    throw error;\n  }\n};\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by id:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n}\n\nexport async function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesInput\":\"movies_moviesInput__hXhR3\",\"moviesButton\":\"movies_moviesButton__7+kIk\"};","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { searchMovies } from '../Api';\nimport css from './movies.module.css';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (query.trim()) {\n      try {\n        const fetchedMovies = await searchMovies(query);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        console.error('Error searching movies:', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2>Search Movies</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Type to search...\"\n          className={css.moviesInput}\n        />\n        <button className={css.moviesButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div>\n        {movies.map(movie => (\n          <div\n            key={movie.id}\n            onClick={() => navigate(`/movies/${movie.id}`)}\n            style={{ cursor: 'pointer' }}\n          >\n            {movie.title}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":["fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","response","_context2","prev","next","axios","sent","abrupt","data","results","t0","console","error","stop","searchMovies","_ref","_callee","query","_context","params","_x","fetchMovieById","_x2","_fetchMovieById","_callee3","movieId","_context3","concat","fetchMovieCredits","_x3","_fetchMovieCredits","_callee4","_context4","cast","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","Movies","_useState","useState","_useState2","_slicedToArray","setQuery","_useState3","_useState4","movies","setMovies","navigate","useNavigate","handleSubmit","e","fetchedMovies","preventDefault","trim","_jsxs","children","_jsx","onSubmit","type","value","onChange","target","placeholder","className","css","map","movie","onClick","id","style","cursor","title"],"sourceRoot":""}